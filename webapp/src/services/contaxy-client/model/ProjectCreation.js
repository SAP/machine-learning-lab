/**
 * Contaxy API
 * Functionality to create and manage projects, services, jobs, and files.
 *
 * The version of the OpenAPI document: 0.0.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";

/**
 * The ProjectCreation model module.
 * @module model/ProjectCreation
 * @version 0.0.5
 */
class ProjectCreation {
  /**
   * Constructs a new <code>ProjectCreation</code>.
   * @alias module:model/ProjectCreation
   * @param id {String} Project ID used for creating the project.
   */
  constructor(id) {
    ProjectCreation.initialize(this, id);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, id) {
    obj["id"] = id;
  }

  /**
   * Constructs a <code>ProjectCreation</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ProjectCreation} obj Optional instance to populate.
   * @return {module:model/ProjectCreation} The populated <code>ProjectCreation</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ProjectCreation();

      if (data.hasOwnProperty("display_name")) {
        obj["display_name"] = ApiClient.convertToType(
          data["display_name"],
          "String"
        );
      }
      if (data.hasOwnProperty("description")) {
        obj["description"] = ApiClient.convertToType(
          data["description"],
          "String"
        );
      }
      if (data.hasOwnProperty("icon")) {
        obj["icon"] = ApiClient.convertToType(data["icon"], "String");
      }
      if (data.hasOwnProperty("metadata")) {
        obj["metadata"] = ApiClient.convertToType(data["metadata"], {
          String: "String",
        });
      }
      if (data.hasOwnProperty("disabled")) {
        obj["disabled"] = ApiClient.convertToType(data["disabled"], "Boolean");
      }
      if (data.hasOwnProperty("id")) {
        obj["id"] = ApiClient.convertToType(data["id"], "String");
      }
    }
    return obj;
  }
}

/**
 * A user-defined human-readable name of the resource. The name can be up to 128 characters long and can consist of any UTF-8 character.
 * @member {String} display_name
 */
ProjectCreation.prototype["display_name"] = undefined;

/**
 * A user-defined short description about the resource. Can consist of any UTF-8 character.
 * @member {String} description
 */
ProjectCreation.prototype["description"] = undefined;

/**
 * Identifier or image URL used for displaying this resource.
 * @member {String} icon
 */
ProjectCreation.prototype["icon"] = undefined;

/**
 * A collection of arbitrary key-value pairs associated with this resource that does not need predefined structure. Enable third-party integrations to decorate objects with additional metadata for their own use.
 * @member {Object.<String, String>} metadata
 */
ProjectCreation.prototype["metadata"] = undefined;

/**
 * Allows to disable a resource without requiring deletion. A disabled resource is not shown and not accessible.
 * @member {Boolean} disabled
 * @default false
 */
ProjectCreation.prototype["disabled"] = false;

/**
 * Project ID used for creating the project.
 * @member {String} id
 */
ProjectCreation.prototype["id"] = undefined;

export default ProjectCreation;
